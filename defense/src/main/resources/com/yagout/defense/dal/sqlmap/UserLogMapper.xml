<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yagout.defense.dal.service.UserLogMapper">
	<resultMap id="BaseResultMap" type="com.yagout.defense.dal.model.UserLog">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="event_time" property="eventTime" jdbcType="TIMESTAMP" />
		<result column="event_type" property="eventType" jdbcType="INTEGER" />
		<result column="event_result" property="eventResult" jdbcType="INTEGER" />
		<result column="event_verbose" property="eventVerbose"
			jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.yagout.defense.dal.model.UserLog"
		extends="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="log_exception" property="logException"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, user_id, event_time, event_type, event_result, event_verbose
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		log_exception
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.yagout.defense.dal.model.UserLogExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yagout.defense.dal.model.UserLogExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user_log
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from user_log
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yagout.defense.dal.model.UserLogExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yagout.defense.dal.model.UserLog">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into user_log (id, user_id, event_time,
		event_type, event_result, event_verbose,
		log_exception)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{eventTime,jdbcType=TIMESTAMP},
		#{eventType,jdbcType=INTEGER}, #{eventResult,jdbcType=INTEGER}, #{eventVerbose,jdbcType=VARCHAR},
		#{logException,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.yagout.defense.dal.model.UserLog">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into user_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="eventTime != null">
				event_time,
			</if>
			<if test="eventType != null">
				event_type,
			</if>
			<if test="eventResult != null">
				event_result,
			</if>
			<if test="eventVerbose != null">
				event_verbose,
			</if>
			<if test="logException != null">
				log_exception,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="eventTime != null">
				#{eventTime,jdbcType=TIMESTAMP},
			</if>
			<if test="eventType != null">
				#{eventType,jdbcType=INTEGER},
			</if>
			<if test="eventResult != null">
				#{eventResult,jdbcType=INTEGER},
			</if>
			<if test="eventVerbose != null">
				#{eventVerbose,jdbcType=VARCHAR},
			</if>
			<if test="logException != null">
				#{logException,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yagout.defense.dal.model.UserLogExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user_log
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.eventTime != null">
				event_time = #{record.eventTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.eventType != null">
				event_type = #{record.eventType,jdbcType=INTEGER},
			</if>
			<if test="record.eventResult != null">
				event_result = #{record.eventResult,jdbcType=INTEGER},
			</if>
			<if test="record.eventVerbose != null">
				event_verbose = #{record.eventVerbose,jdbcType=VARCHAR},
			</if>
			<if test="record.logException != null">
				log_exception = #{record.logException,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user_log
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		event_time = #{record.eventTime,jdbcType=TIMESTAMP},
		event_type = #{record.eventType,jdbcType=INTEGER},
		event_result = #{record.eventResult,jdbcType=INTEGER},
		event_verbose = #{record.eventVerbose,jdbcType=VARCHAR},
		log_exception = #{record.logException,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user_log
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		event_time = #{record.eventTime,jdbcType=TIMESTAMP},
		event_type = #{record.eventType,jdbcType=INTEGER},
		event_result = #{record.eventResult,jdbcType=INTEGER},
		event_verbose = #{record.eventVerbose,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yagout.defense.dal.model.UserLog">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user_log
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="eventTime != null">
				event_time = #{eventTime,jdbcType=TIMESTAMP},
			</if>
			<if test="eventType != null">
				event_type = #{eventType,jdbcType=INTEGER},
			</if>
			<if test="eventResult != null">
				event_result = #{eventResult,jdbcType=INTEGER},
			</if>
			<if test="eventVerbose != null">
				event_verbose = #{eventVerbose,jdbcType=VARCHAR},
			</if>
			<if test="logException != null">
				log_exception = #{logException,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yagout.defense.dal.model.UserLog">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user_log
		set user_id = #{userId,jdbcType=INTEGER},
		event_time = #{eventTime,jdbcType=TIMESTAMP},
		event_type = #{eventType,jdbcType=INTEGER},
		event_result = #{eventResult,jdbcType=INTEGER},
		event_verbose = #{eventVerbose,jdbcType=VARCHAR},
		log_exception = #{logException,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yagout.defense.dal.model.UserLog">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user_log
		set user_id = #{userId,jdbcType=INTEGER},
		event_time = #{eventTime,jdbcType=TIMESTAMP},
		event_type = #{eventType,jdbcType=INTEGER},
		event_result = #{eventResult,jdbcType=INTEGER},
		event_verbose = #{eventVerbose,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<insert id="insertByList" parameterType="java.util.List">
	 insert into user_log (id, user_id, event_time,
		event_type, event_result, event_verbose,
		log_exception)
		values 
		<foreach collection="list" index="index" item="item" separator=",">
		 (#{item.id}, #{item.userId},#{item.eventTime},#{item.eventType}, 
		  #{item.eventResult}, #{item.eventVerbose},#{item.logException})
		</foreach>
	</insert>
</mapper>