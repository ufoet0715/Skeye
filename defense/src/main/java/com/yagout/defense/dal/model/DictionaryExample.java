package com.yagout.defense.dal.model;

import java.util.ArrayList;
import java.util.List;

public class DictionaryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public DictionaryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDictionaryKeyIsNull() {
            addCriterion("dictionary_key is null");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyIsNotNull() {
            addCriterion("dictionary_key is not null");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyEqualTo(Integer value) {
            addCriterion("dictionary_key =", value, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyNotEqualTo(Integer value) {
            addCriterion("dictionary_key <>", value, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyGreaterThan(Integer value) {
            addCriterion("dictionary_key >", value, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyGreaterThanOrEqualTo(Integer value) {
            addCriterion("dictionary_key >=", value, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyLessThan(Integer value) {
            addCriterion("dictionary_key <", value, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyLessThanOrEqualTo(Integer value) {
            addCriterion("dictionary_key <=", value, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyIn(List<Integer> values) {
            addCriterion("dictionary_key in", values, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyNotIn(List<Integer> values) {
            addCriterion("dictionary_key not in", values, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyBetween(Integer value1, Integer value2) {
            addCriterion("dictionary_key between", value1, value2, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryKeyNotBetween(Integer value1, Integer value2) {
            addCriterion("dictionary_key not between", value1, value2, "dictionaryKey");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueIsNull() {
            addCriterion("dictionary_value is null");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueIsNotNull() {
            addCriterion("dictionary_value is not null");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueEqualTo(String value) {
            addCriterion("dictionary_value =", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueNotEqualTo(String value) {
            addCriterion("dictionary_value <>", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueGreaterThan(String value) {
            addCriterion("dictionary_value >", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueGreaterThanOrEqualTo(String value) {
            addCriterion("dictionary_value >=", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueLessThan(String value) {
            addCriterion("dictionary_value <", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueLessThanOrEqualTo(String value) {
            addCriterion("dictionary_value <=", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueLike(String value) {
            addCriterion("dictionary_value like", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueNotLike(String value) {
            addCriterion("dictionary_value not like", value, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueIn(List<String> values) {
            addCriterion("dictionary_value in", values, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueNotIn(List<String> values) {
            addCriterion("dictionary_value not in", values, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueBetween(String value1, String value2) {
            addCriterion("dictionary_value between", value1, value2, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andDictionaryValueNotBetween(String value1, String value2) {
            addCriterion("dictionary_value not between", value1, value2, "dictionaryValue");
            return (Criteria) this;
        }

        public Criteria andParentKeyIsNull() {
            addCriterion("parent_key is null");
            return (Criteria) this;
        }

        public Criteria andParentKeyIsNotNull() {
            addCriterion("parent_key is not null");
            return (Criteria) this;
        }

        public Criteria andParentKeyEqualTo(Integer value) {
            addCriterion("parent_key =", value, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyNotEqualTo(Integer value) {
            addCriterion("parent_key <>", value, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyGreaterThan(Integer value) {
            addCriterion("parent_key >", value, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyGreaterThanOrEqualTo(Integer value) {
            addCriterion("parent_key >=", value, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyLessThan(Integer value) {
            addCriterion("parent_key <", value, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyLessThanOrEqualTo(Integer value) {
            addCriterion("parent_key <=", value, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyIn(List<Integer> values) {
            addCriterion("parent_key in", values, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyNotIn(List<Integer> values) {
            addCriterion("parent_key not in", values, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyBetween(Integer value1, Integer value2) {
            addCriterion("parent_key between", value1, value2, "parentKey");
            return (Criteria) this;
        }

        public Criteria andParentKeyNotBetween(Integer value1, Integer value2) {
            addCriterion("parent_key not between", value1, value2, "parentKey");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleIsNull() {
            addCriterion("remove_able is null");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleIsNotNull() {
            addCriterion("remove_able is not null");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleEqualTo(Boolean value) {
            addCriterion("remove_able =", value, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleNotEqualTo(Boolean value) {
            addCriterion("remove_able <>", value, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleGreaterThan(Boolean value) {
            addCriterion("remove_able >", value, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleGreaterThanOrEqualTo(Boolean value) {
            addCriterion("remove_able >=", value, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleLessThan(Boolean value) {
            addCriterion("remove_able <", value, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleLessThanOrEqualTo(Boolean value) {
            addCriterion("remove_able <=", value, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleIn(List<Boolean> values) {
            addCriterion("remove_able in", values, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleNotIn(List<Boolean> values) {
            addCriterion("remove_able not in", values, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleBetween(Boolean value1, Boolean value2) {
            addCriterion("remove_able between", value1, value2, "removeAble");
            return (Criteria) this;
        }

        public Criteria andRemoveAbleNotBetween(Boolean value1, Boolean value2) {
            addCriterion("remove_able not between", value1, value2, "removeAble");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dictionary
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dictionary
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}