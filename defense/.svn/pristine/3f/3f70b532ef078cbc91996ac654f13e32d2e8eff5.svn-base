<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="authenticator" ref="authenticator" />
		<property name="sessionManager" ref="sessionManager" />
		<!-- <property name="sessionMode" value="http"/> -->
		<property name="cacheManager" ref="redisCacheManager" />
		<property name="realms">
			<list>
				<ref local="loginRealm" />
			</list>
		</property>
	</bean>
	
	<bean class="com.yagout.defense.shiro.realm.LoginRealm" id="loginRealm">
		<property name="credentialsMatcher" ref="hashedCredentialsMatcher" />
	</bean>

	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.html" />
	</bean>

	<bean id="shiroFilter" class="com.yagout.defense.shiro.MyShiroFilterFactoryBean">
		<!-- 调用我们配置的权限管理器 -->
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/loginController/toLogin" />
		<property name="successUrl" value="/loginController/login" />
		<property name="unauthorizedUrl" value="/loginController/permNo" />
		<property name="filterChainDefinitions">
			<value>
			    /user/checkUser/** =anon
				/loginController/loginOut =logout
				/admin/*=authc,roles[1]
				/kaptchaImageController/**=anon
				/resources/** = anon
				/** = authc
			</value>
		</property>

	</bean>

	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator" />
 
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="redisShiroSessionDAO" />
		<!-- <property name="globalSessionTimeout" value="30000000" /> --><!-- 会话过期时间，在配置文件里面配置 -->
		<!-- <property name="sessionValidationInterval" value="30000000" /> -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean>

	<bean id="hashedCredentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"><!-- 密钥的算法 -->
		<property name="hashAlgorithmName" value="MD5" />
		<property name="storedCredentialsHexEncoded" value="true" />
		<property name="hashIterations" value="2" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- copy to 'spring-mvc.xml' -->

	<!--redis开始 -->

	<!-- 设置redisShiroSessionDAO -->
	<bean id="redisShiroSessionDAO" class="com.yagout.defense.redis.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- 设置redisCacheManager -->
	<bean id="redisCacheManager" class="com.yagout.defense.redis.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- 设置redisCache -->
	<bean id="redisCache" class="com.yagout.defense.redis.RedisCache">
		<constructor-arg ref="redisManager"></constructor-arg>
	</bean>

	<!-- 设置redisManager -->
	<bean id="redisManager" class="com.yagout.defense.redis.RedisManager"></bean>

	<!--redis结束 -->

</beans>