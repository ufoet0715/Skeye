<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yagout.defense.dal.service.ScanStationMapper">
  <resultMap id="BaseResultMap" type="com.yagout.defense.dal.model.ScanStation">
    <id column="mac" jdbcType="VARCHAR" property="mac" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="signal" jdbcType="INTEGER" property="signal" />
    <result column="maker" jdbcType="VARCHAR" property="maker" />
    <result column="mac_ap" jdbcType="VARCHAR" property="macAp" />
  </resultMap>
  <sql id="Base_Column_List">
    mac, identity, channel, `signal`, maker, mac_ap
  </sql>
  <select id="getStationByMap" parameterType="map" resultType="java.util.HashMap">
       select 
    mac, identity, channel, `signal`, maker, mac_ap as macAp
    from scan_station
    where
       1=1
       <if test="macAp!=nul and macAp!=''">
         and
         mac_ap = #{macAp,jdbcType=VARCHAR}

       </if>

  </select>
  
  <select id="getmacApisNullByMap" parameterType="map" resultType="java.util.HashMap">
    select 
    mac, identity, channel, `signal`, maker, mac_ap as macAp
    from scan_station
    where mac_ap='' or mac_ap is null
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select mac, identity, channel, `signal`, maker, mac_ap from scan_station where mac = #{mac,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from scan_station
    where mac = #{mac,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yagout.defense.dal.model.ScanStation">
    insert into scan_station (mac, identity, channel, 
      signal, maker, mac_ap
      )
    values (#{mac,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}, #{channel,jdbcType=INTEGER}, 
      #{signal,jdbcType=INTEGER}, #{maker,jdbcType=VARCHAR}, #{macAp,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yagout.defense.dal.model.ScanStation">
    insert into scan_station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mac != null">
        mac,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="signal != null">
        signal,
      </if>
      <if test="maker != null">
        maker,
      </if>
      <if test="macAp != null">
        mac_ap,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mac != null">
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="signal != null">
        #{signal,jdbcType=INTEGER},
      </if>
      <if test="maker != null">
        #{maker,jdbcType=VARCHAR},
      </if>
      <if test="macAp != null">
        #{macAp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yagout.defense.dal.model.ScanStation">
    update scan_station
    <set>
      <if test="identity != null">
        identity = #{identity,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="signal != null">
        signal = #{signal,jdbcType=INTEGER},
      </if>
      <if test="maker != null">
        maker = #{maker,jdbcType=VARCHAR},
      </if>
      <if test="macAp != null">
        mac_ap = #{macAp,jdbcType=VARCHAR},
      </if>
    </set>
    where mac = #{mac,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yagout.defense.dal.model.ScanStation">
    update scan_station
    set identity = #{identity,jdbcType=INTEGER},
      channel = #{channel,jdbcType=INTEGER},
      signal = #{signal,jdbcType=INTEGER},
      maker = #{maker,jdbcType=VARCHAR},
      mac_ap = #{macAp,jdbcType=VARCHAR}
    where mac = #{mac,jdbcType=VARCHAR}
  </update>
  
  <select id="getmacApisNull"  resultMap="BaseResultMap">
   select mac, identity, channel, `signal`, maker, mac_ap from scan_station  where mac_ap='' or mac_ap is null
  </select>
  
  <select id="selectStationList" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" /> 
  	from scan_station
  </select>
</mapper>